# Generated by Phi-2 via Ollama

class Solution:
	def minCostClimbingStairs(self,cost):
		n = len(cost)
		if n == 0:
			return 0
		elif n == 1:
			return cost[0]
		else:
			dp1 = [float("inf") for i in range(2)]
			dp1[1] = cost[0]
			dp2 = [float("inf") for i in range(2) + [cost[-1]]]
			for i in range(2, n):
				dp1[0] = dp1[1] + cost[i]
				dp1[1] = min(dp1[0], dp1[1])
				dp2[1] = dp2[-1] + cost[i]
				for j in range(len(dp2) - 2):
					dp2[j+2] = min(dp2[j], dp2[j+1])
			return min(dp1[0], dp1[1]) + cost[-1] if len(cost) == 1 else min(dp1[-1], dp2[-1])
