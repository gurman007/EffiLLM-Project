# Generated by Gemma 2B via Ollama

class Solution:
    def isSubsequence(self, s: str, t: str) -> bool:
        n = len(s)
        m = len(t)
        dp = [[False] * (m + 1) for _ in range(n + 1)] for _ in range(m + 1)]

        # Build the dynamic programming table
        for i in range(1, n + 1):
            for j in range(1, m + 1):
                if s[i - 1] == t[j - 1]:
                    dp[i][j] = dp[i - 1][j - 1]
                else:
                    dp[i][j] = dp[i - 1][j]

        return dp[n][m]

