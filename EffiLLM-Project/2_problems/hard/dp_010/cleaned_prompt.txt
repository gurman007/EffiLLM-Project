Given two arrays `nums1`&nbsp;and `nums2`.

Return the maximum dot product&nbsp;between&nbsp;non-empty subsequences of nums1 and nums2 with the same length.

A subsequence of a array is a new array which is formed from the original array by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie,&nbsp;`[2,3,5]`&nbsp;is a subsequence of&nbsp;`[1,2,3,4,5]`&nbsp;while `[1,5,3]`&nbsp;is not).

&nbsp;
Example 1:

```

Input: nums1 = [2,1,-2,5], nums2 = [3,0,-6]
Output: 18
Explanation: Take subsequence [2,-2] from nums1 and subsequence [3,-6] from nums2.
Their dot product is (2*3 + (-2)*(-6)) = 18.
```

Example 2:

```

Input: nums1 = [3,-2], nums2 = [2,-6,7]
Output: 21
Explanation: Take subsequence [3] from nums1 and subsequence [7] from nums2.
Their dot product is (3*7) = 21.
```

Example 3:

```

Input: nums1 = [-1,-1], nums2 = [1,1]
Output: -1
Explanation: Take subsequence [-1] from nums1 and subsequence [1] from nums2.
Their dot product is -1.
```

&nbsp;
Constraints:


	`1 &lt;= nums1.length, nums2.length &lt;= 500`
	`-1000 &lt;= nums1[i], nums2[i] &lt;= 1000`