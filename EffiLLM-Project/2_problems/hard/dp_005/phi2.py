# Generated by Phi-2 via Ollama

class Solution:
    def maxProfit(self, k: int, prices: List[int]) -> int:
        if not prices or k == 0:
            return 0

        if len(prices) <= 2:
            return max(0, min(prices)) * (len(prices) - 1) if prices else 0

        profits = [[0 for _ in range(k + 1)] for _ in range(len(prices))]
        for i in range(1, len(prices)):
            min_profit = min(prices[i], profits[i-1][0])
            for j in range(2, k+1):
                profits[i][j] = max(profits[i-1][j], prices[i] + profits[i-1][j-1] - min_profit)

        return max(profits[-1])
