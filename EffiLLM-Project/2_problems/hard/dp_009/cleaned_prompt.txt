You are given a string `s` that consists of the digits `&#39;1&#39;` to `&#39;9&#39;` and two integers `k` and `minLength`.

A partition of `s` is called beautiful if:


	`s` is partitioned into `k` non-intersecting substrings.
	Each substring has a length of at least `minLength`.
	Each substring starts with a prime digit and ends with a non-prime digit. Prime digits are `&#39;2&#39;`, `&#39;3&#39;`, `&#39;5&#39;`, and `&#39;7&#39;`, and the rest of the digits are non-prime.


Return the number of beautiful partitions of `s`. Since the answer may be very large, return it modulo `109 + 7`.

A substring is a contiguous sequence of characters within a string.

&nbsp;
Example 1:

```

Input: s = &quot;23542185131&quot;, k = 3, minLength = 2
Output: 3
Explanation: There exists three ways to create a beautiful partition:
&quot;2354 | 218 | 5131&quot;
&quot;2354 | 21851 | 31&quot;
&quot;2354218 | 51 | 31&quot;

```

Example 2:

```

Input: s = &quot;23542185131&quot;, k = 3, minLength = 3
Output: 1
Explanation: There exists one way to create a beautiful partition: &quot;2354 | 218 | 5131&quot;.

```

Example 3:

```

Input: s = &quot;3312958&quot;, k = 3, minLength = 1
Output: 1
Explanation: There exists one way to create a beautiful partition: &quot;331 | 29 | 58&quot;.

```

&nbsp;
Constraints:


	`1 &lt;= k, minLength &lt;= s.length &lt;= 1000`
	`s` consists of the digits `&#39;1&#39;` to `&#39;9&#39;`.