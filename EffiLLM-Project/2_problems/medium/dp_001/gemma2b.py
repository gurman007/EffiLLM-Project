# Generated by Gemma 2B via Ollama

class Solution:
    def findLength(self, nums1: List[int], nums2: List[int]) -> int:
        # Create a dictionary to store the length of the longest common subarray up to each index
        length_dict = {}
        max_length = 0

        # Initialize the dictionary with the length of the longest common subarray for the first array
        length_dict[0] = len(nums1)

        # Iterate over the second array
        for i in range(1, len(nums2)):
            # Update the dictionary with the length of the longest common subarray for the current array
            length_dict[i] = max(length_dict[i], length_dict[i - 1] + len(nums1[i - 1]))

        # Find the maximum length from the dictionary
        max_length = max(max_length, length_dict[len(nums2)])

        return max_length

